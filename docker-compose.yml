version: '3.8'

services:
  core:
    build:
      context: ./core
      dockerfile: Dockerfile
    volumes:
      - ./core/core:/app/core
      - ./core/rfps:/app/rfps
      - ./core/manage.py:/app/manage.py
    ports:
      - "9000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=core.settings
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/generate-api.js:/app/generate-api.js
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
    ports:
      - "3002:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:9000
      - WDS_SOCKET_PORT=3002
    depends_on:
      - core

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=interview
      - POSTGRES_USER=interview
      - POSTGRES_PASSWORD=interview
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U interview"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 